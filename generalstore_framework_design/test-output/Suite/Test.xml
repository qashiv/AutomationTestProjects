<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-982KU37" failures="0" tests="3" name="Test" time="42.313" errors="0" timestamp="2023-11-23T17:57:19 IST">
  <testcase classname="org.rahulshetty.testrunner.BaseTest" name="@BeforeMethod configuration" time="41.144">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Trying to use a chromedriver binary at the path D:\Selenium with Java Programs\Appium By Rahul Shetty Sir\appium_framework_design\Driver\chromedriver.exe, but it doesn&amp;apos;t exist! 
Host info: host: &amp;apos;DESKTOP-982KU37&amp;apos;, ip: &amp;apos;192.168.43.71&amp;apos;
Build info: version: &amp;apos;4.15.0&amp;apos;, revision: &amp;apos;1d14b5521b&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;20.0.2&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{browserName=Chrome, appium:chromedriverExecutable=D:\Selenium with Java Programs\Appium By Rahul Shetty Sir\appium_framework_design\Driver\chromedriver.exe, appium:deviceName=Demo, platformName=ANDROID, appium:automationName=UIAutomator2, appium:app=D:\Selenium with Java Programs\Appium By Rahul Shetty Sir\Appium_Demo\Resources\General-Store.apk}], desiredCapabilities=Capabilities {appium:app: D:\Selenium with Java Progr..., appium:automationName: UIAutomator2, appium:chromedriverExecutable: D:\Selenium with Java Progr..., appium:deviceName: Demo, browserName: Chrome, platformName: ANDROID}}]
Capabilities {appium:app: D:\Selenium with Java Progr..., appium:automationName: UIAutomator2, appium:chromedriverExecutable: D:\Selenium with Java Progr..., appium:deviceName: Demo, browserName: Chrome, platformName: ANDROID}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Trying to use a chromedriver binary at the path D:\Selenium with Java Programs\Appium By Rahul Shetty Sir\appium_framework_design\Driver\chromedriver.exe, but it doesn't exist! 
Host info: host: 'DESKTOP-982KU37', ip: '192.168.43.71'
Build info: version: '4.15.0', revision: '1d14b5521b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.2'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{browserName=Chrome, appium:chromedriverExecutable=D:\Selenium with Java Programs\Appium By Rahul Shetty Sir\appium_framework_design\Driver\chromedriver.exe, appium:deviceName=Demo, platformName=ANDROID, appium:automationName=UIAutomator2, appium:app=D:\Selenium with Java Programs\Appium By Rahul Shetty Sir\Appium_Demo\Resources\General-Store.apk}], desiredCapabilities=Capabilities {appium:app: D:\Selenium with Java Progr..., appium:automationName: UIAutomator2, appium:chromedriverExecutable: D:\Selenium with Java Progr..., appium:deviceName: Demo, browserName: Chrome, platformName: ANDROID}}]
Capabilities {appium:app: D:\Selenium with Java Progr..., appium:automationName: UIAutomator2, appium:chromedriverExecutable: D:\Selenium with Java Progr..., appium:deviceName: Demo, browserName: Chrome, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:140)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:133)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:182)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:274)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:163)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:89)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:113)
at org.rahulshetty.utils.AndroidUtil.configuration(AndroidUtil.java:91)
at org.rahulshetty.testrunner.BaseTest.configuration(BaseTest.java:20)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod configuration -->
  <testcase classname="org.rahulshetty.testrunner.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="org.rahulshetty.testrunner.BaseTest" name="@BeforeMethod configuration" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod configuration -->
  <testcase classname="org.rahulshetty.testrunner.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="org.rahulshetty.testrunner.BaseTest" name="@BeforeMethod configuration" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod configuration -->
  <testcase classname="org.rahulshetty.testrunner.BaseTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="org.rahulshetty.testrunner.GeneralStoreApkTestRunner" name="fillFormErrorValidation" time="0.0">
    <skipped/>
  </testcase> <!-- fillFormErrorValidation -->
  <testcase classname="org.rahulshetty.testrunner.GeneralStoreApkTestRunner" name="fillFormPositiveFlow" time="0.0">
    <skipped/>
  </testcase> <!-- fillFormPositiveFlow -->
  <testcase classname="org.rahulshetty.testrunner.GeneralStoreApkTestRunner" name="fillFormPositiveFlow" time="0.0">
    <skipped/>
  </testcase> <!-- fillFormPositiveFlow -->
</testsuite> <!-- Test -->
